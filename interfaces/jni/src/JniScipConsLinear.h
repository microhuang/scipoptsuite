/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_zib_jscip_nativ_jni_JniScipConsLinear */

#ifndef _Included_de_zib_jscip_nativ_jni_JniScipConsLinear
#define _Included_de_zib_jscip_nativ_jni_JniScipConsLinear
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    includeConshdlrLinear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_includeConshdlrLinear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    createConsLinear
 * Signature: (JLjava/lang/String;I[J[DDDZZZZZZZZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_createConsLinear
  (JNIEnv *, jobject, jlong, jstring, jint, jlongArray, jdoubleArray, jdouble, jdouble, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    createConsBasicLinear
 * Signature: (JLjava/lang/String;I[J[DDD)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_createConsBasicLinear
  (JNIEnv *, jobject, jlong, jstring, jint, jlongArray, jdoubleArray, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    addCoefLinear
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_addCoefLinear
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getLhsLinear
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getLhsLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getRhsLinear
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getRhsLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    chgLhsLinear
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_chgLhsLinear
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    chgRhsLinear
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_chgRhsLinear
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getNVarsLinear
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getNVarsLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getVarsLinear
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getVarsLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getValsLinear
 * Signature: (JJ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getValsLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getActivityLinear
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getActivityLinear
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getFeasibilityLinear
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getFeasibilityLinear
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getDualsolLinear
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getDualsolLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getDualfarkasLinear
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getDualfarkasLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    getRowLinear
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_getRowLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    upgradeConsLinear
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_upgradeConsLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    markDoNotUpgradeConsLinear
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_markDoNotUpgradeConsLinear
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsLinear
 * Method:    setUpgradeConsLinear
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsLinear_setUpgradeConsLinear
  (JNIEnv *, jobject, jlong, jlong, jboolean);

#ifdef __cplusplus
}
#endif
#endif

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_zib_jscip_nativ_jni_JniScipVar */

#ifndef _Included_de_zib_jscip_nativ_jni_JniScipVar
#define _Included_de_zib_jscip_nativ_jni_JniScipVar
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNLocksDown
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNLocksDown
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNLocksUp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNLocksUp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varMayRoundDown
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varMayRoundDown
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varMayRoundUp
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varMayRoundUp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varCompareActiveAndNegated
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varCompareActiveAndNegated
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varCompare
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varCompare
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varsGetProbvar
 * Signature: ([JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varsGetProbvar
  (JNIEnv *, jobject, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetProbvar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetProbvar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsTransformedOrigvar
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsTransformedOrigvar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNBranchings
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNBranchings
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNBranchingsCurrentRun
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNBranchingsCurrentRun
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetInferenceSum
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetInferenceSum
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetInferenceSumCurrentRun
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetInferenceSumCurrentRun
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetCutoffSum
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetCutoffSum
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetCutoffSumCurrentRun
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetCutoffSumCurrentRun
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetAvgBranchdepth
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetAvgBranchdepth
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetAvgBranchdepthCurrentRun
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetAvgBranchdepthCurrentRun
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varHasImplic
 * Signature: (JZJI)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varHasImplic
  (JNIEnv *, jobject, jlong, jboolean, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varHasBinaryImplic
 * Signature: (JZJZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varHasBinaryImplic
  (JNIEnv *, jobject, jlong, jboolean, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varsHaveCommonClique
 * Signature: (JZJZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varsHaveCommonClique
  (JNIEnv *, jobject, jlong, jboolean, jlong, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetAggregatedObj
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetAggregatedObj
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varSetInitial
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varSetInitial
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varSetRemovable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varSetRemovable
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNUses
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNUses
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetData
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetData
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varSetData
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varSetData
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetStatus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsOriginal
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsOriginal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsTransformed
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsTransformed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsNegated
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsNegated
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetType
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsBinary
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsBinary
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsIntegral
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsIntegral
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsInitial
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsInitial
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsRemovable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsRemovable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsDeleted
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsDeleted
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varMarkDeletable
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varMarkDeletable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varMarkNotDeletable
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varMarkNotDeletable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsDeletable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsDeletable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsActive
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsActive
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetIndex
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetIndex
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetProbindex
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetProbindex
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetTransVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetTransVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetCol
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetCol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varIsInLP
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varIsInLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetAggrVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetAggrVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetAggrScalar
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetAggrScalar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetAggrConstant
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetAggrConstant
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetMultaggrNVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetMultaggrNVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetMultaggrVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetMultaggrVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetMultaggrScalars
 * Signature: (J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetMultaggrScalars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetMultaggrConstant
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetMultaggrConstant
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNegatedVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNegatedVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNegationVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNegationVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNegationConstant
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNegationConstant
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetObj
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetObj
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLbOriginal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLbOriginal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetUbOriginal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetUbOriginal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetHolelistOriginal
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetHolelistOriginal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLbGlobal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLbGlobal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetUbGlobal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetUbGlobal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetHolelistGlobal
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetHolelistGlobal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBestBoundGlobal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBestBoundGlobal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetWorstBoundGlobal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetWorstBoundGlobal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLbLocal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLbLocal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetUbLocal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetUbLocal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetHolelistLocal
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetHolelistLocal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBestBoundLocal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBestBoundLocal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetWorstBoundLocal
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetWorstBoundLocal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBestBoundType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBestBoundType
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetWorstBoundType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetWorstBoundType
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLbLazy
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLbLazy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetUbLazy
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetUbLazy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBranchFactor
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBranchFactor
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBranchPriority
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBranchPriority
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBranchDirection
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBranchDirection
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNVlbs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNVlbs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetVlbVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetVlbVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetVlbCoefs
 * Signature: (J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetVlbCoefs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetVlbConstants
 * Signature: (J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetVlbConstants
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNVubs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNVubs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetVubVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetVubVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetVubCoefs
 * Signature: (J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetVubCoefs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetVubConstants
 * Signature: (J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetVubConstants
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNImpls
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNImpls
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNBinImpls
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNBinImpls
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetImplVars
 * Signature: (JZ)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetImplVars
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetImplTypes
 * Signature: (JZ)[I
 */
JNIEXPORT jintArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetImplTypes
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetImplBounds
 * Signature: (JZ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetImplBounds
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetImplIds
 * Signature: (JZ)[I
 */
JNIEXPORT jintArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetImplIds
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNCliques
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNCliques
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetCliques
 * Signature: (JZ)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetCliques
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLPSol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLPSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNLPSol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNLPSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBdchgInfoLb
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBdchgInfoLb
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNBdchgInfosLb
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNBdchgInfosLb
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBdchgInfoUb
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBdchgInfoUb
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNBdchgInfosUb
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNBdchgInfosUb
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetValuehistory
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetValuehistory
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLPSol_rec
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLPSol_1rec
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetNLPSol_rec
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetNLPSol_1rec
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetPseudoSol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetPseudoSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetSol
 * Signature: (JZ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetSol
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetRootSol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetRootSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBestRootSol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBestRootSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBestRootRedcost
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBestRootRedcost
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBestRootLPObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBestRootLPObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varSetBestRootSol
 * Signature: (JDDD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varSetBestRootSol
  (JNIEnv *, jobject, jlong, jdouble, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetAvgSol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetAvgSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLbchgInfo
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLbchgInfo
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetUbchgInfo
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetUbchgInfo
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBdchgInfo
 * Signature: (JIJZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBdchgInfo
  (JNIEnv *, jobject, jlong, jint, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLbAtIndex
 * Signature: (JJZ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLbAtIndex
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetUbAtIndex
 * Signature: (JJZ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetUbAtIndex
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetBdAtIndex
 * Signature: (JIJZ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetBdAtIndex
  (JNIEnv *, jobject, jlong, jint, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varWasFixedAtIndex
 * Signature: (JJZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varWasFixedAtIndex
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLastBdchgIndex
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLastBdchgIndex
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varGetLastBdchgDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varGetLastBdchgDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    varWasFixedEarlier
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_varWasFixedEarlier
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchgidxIsEarlier
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchgidxIsEarlier
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchgidxIsEarlierNonNull
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchgidxIsEarlierNonNull
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetOldbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetOldbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetNewbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetNewbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetChgtype
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetChgtype
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetBoundtype
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetBoundtype
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetPos
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetPos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetIdx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetIdx
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetInferVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetInferVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetInferCons
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetInferCons
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetInferProp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetInferProp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetInferInfo
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetInferInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoGetInferBoundtype
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoGetInferBoundtype
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoIsRedundant
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoIsRedundant
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoHasInferenceReason
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoHasInferenceReason
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    bdchginfoIsTighter
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_bdchginfoIsTighter
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    boundchgGetNewbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_boundchgGetNewbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    boundchgGetVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_boundchgGetVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    boundchgGetBoundchgtype
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_boundchgGetBoundchgtype
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    boundchgGetBoundtype
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_boundchgGetBoundtype
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    boundchgIsRedundant
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_boundchgIsRedundant
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    domchgGetNBoundchgs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_domchgGetNBoundchgs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    domchgGetBoundchg
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_domchgGetBoundchg
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    holelistGetLeft
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_holelistGetLeft
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    holelistGetRight
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_holelistGetRight
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipVar
 * Method:    holelistGetNext
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipVar_holelistGetNext
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif

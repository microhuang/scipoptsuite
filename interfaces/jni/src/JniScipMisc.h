/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_zib_jscip_nativ_jni_JniScipMisc */

#ifndef _Included_de_zib_jscip_nativ_jni_JniScipMisc
#define _Included_de_zib_jscip_nativ_jni_JniScipMisc
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    gmlWriteNode
 * Signature: (JILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_gmlWriteNode
  (JNIEnv *, jobject, jlong, jint, jstring, jstring, jstring, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    gmlWriteEdge
 * Signature: (JIILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_gmlWriteEdge
  (JNIEnv *, jobject, jlong, jint, jint, jstring, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    gmlWriteArc
 * Signature: (JIILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_gmlWriteArc
  (JNIEnv *, jobject, jlong, jint, jint, jstring, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    gmlWriteOpening
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_gmlWriteOpening
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    gmlWriteClosing
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_gmlWriteClosing
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sparseSolCreate
 * Signature: ([JIZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sparseSolCreate
  (JNIEnv *, jobject, jlongArray, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sparseSolGetVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sparseSolGetVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sparseSolGetNVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sparseSolGetNVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sparseSolGetLbs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sparseSolGetLbs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sparseSolGetUbs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sparseSolGetUbs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sparseSolGetNextSol
 * Signature: (J[JI)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sparseSolGetNextSol
  (JNIEnv *, jobject, jlong, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    queueCreate
 * Signature: (ID)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_queueCreate
  (JNIEnv *, jobject, jint, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    queueClear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_queueClear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    queueInsert
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_queueInsert
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    queueRemove
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_queueRemove
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    queueFirst
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_queueFirst
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    queueIsEmpty
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_queueIsEmpty
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    queueNElems
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_queueNElems
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    pqueueClear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_pqueueClear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    pqueueInsert
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_pqueueInsert
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    pqueueRemove
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_pqueueRemove
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    pqueueFirst
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_pqueueFirst
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    pqueueNElems
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_pqueueNElems
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    pqueueElems
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_pqueueElems
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    calcHashtableSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_calcHashtableSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtableClear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtableClear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtableInsert
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtableInsert
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtableSafeInsert
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtableSafeInsert
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtableRetrieve
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtableRetrieve
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtableRetrieveNext
 * Signature: (J[JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtableRetrieveNext
  (JNIEnv *, jobject, jlong, jlongArray, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtableExists
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtableExists
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtableRemove
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtableRemove
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashtablePrintStatistics
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashtablePrintStatistics
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapCreate
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapCreate
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapInsert
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapInsert
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapGetImage
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapGetImage
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapSetImage
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapSetImage
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapExists
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapExists
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapRemove
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapRemove
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapPrintStatistics
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapPrintStatistics
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapIsEmpty
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapIsEmpty
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapGetNEntries
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapGetNEntries
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapGetNLists
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapGetNLists
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapGetList
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapGetList
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapListGetNEntries
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapListGetNEntries
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapListGetOrigin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapListGetOrigin
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapListGetImage
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapListGetImage
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapListGetNext
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapListGetNext
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    hashmapRemoveAll
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_hashmapRemoveAll
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    activityCreate
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_activityCreate
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    activityGetVar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_activityGetVar
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    activityGetDuration
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_activityGetDuration
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    activityGetDemand
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_activityGetDemand
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    activityGetEnergy
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_activityGetEnergy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileCreate
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileCreate
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profilePrint
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profilePrint
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetCapacity
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetCapacity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetNTimepoints
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetNTimepoints
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetTimepoints
 * Signature: (J)[I
 */
JNIEXPORT jintArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetTimepoints
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetLoads
 * Signature: (J)[I
 */
JNIEXPORT jintArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetLoads
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetTime
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetTime
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetLoad
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetLoad
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileDeleteCore
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileDeleteCore
  (JNIEnv *, jobject, jlong, jint, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetEarliestFeasibleStart
 * Signature: (JIIII[Z)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetEarliestFeasibleStart
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jbooleanArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    profileGetLatestFeasibleStart
 * Signature: (JIIII[Z)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_profileGetLatestFeasibleStart
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jbooleanArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphCreate
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphCreate
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphResize
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphResize
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphCopy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphCopy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphSetSizes
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphSetSizes
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphAddArc
 * Signature: (JIIJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphAddArc
  (JNIEnv *, jobject, jlong, jint, jint, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphAddArcSafe
 * Signature: (JIIJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphAddArcSafe
  (JNIEnv *, jobject, jlong, jint, jint, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphGetNNodes
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphGetNNodes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphGetNodeDatas
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphGetNodeDatas
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphSetNodeDatas
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphSetNodeDatas
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphGetNArcs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphGetNArcs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphGetNSuccessors
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphGetNSuccessors
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphGetSuccessors
 * Signature: (JI)[I
 */
JNIEXPORT jintArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphGetSuccessors
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphGetSuccessorsDatas
 * Signature: (JI)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphGetSuccessorsDatas
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphComputeUndirectedComponents
 * Signature: (JI[I)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphComputeUndirectedComponents
  (JNIEnv *, jobject, jlong, jint, jintArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphTopoSortComponents
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphTopoSortComponents
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphGetNComponents
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphGetNComponents
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphFreeComponents
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphFreeComponents
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphPrint
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphPrint
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphPrintGml
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphPrintGml
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    digraphPrintComponents
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_digraphPrintComponents
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeCreate
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeCreate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeFree
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeFree
  (JNIEnv *, jobject, jlong, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeGetData
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeGetData
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeGetParent
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeGetParent
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeGetLeftchild
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeGetLeftchild
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeGetRightchild
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeGetRightchild
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeGetSibling
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeGetSibling
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeIsRoot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeIsRoot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeIsLeaf
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeIsLeaf
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeIsLeftchild
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeIsLeftchild
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeIsRightchild
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeIsRightchild
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeSetData
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeSetData
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeSetParent
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeSetParent
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeSetLeftchild
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeSetLeftchild
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btnodeSetRightchild
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btnodeSetRightchild
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btCreate
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btCreate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btPrintGml
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btPrintGml
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btIsEmpty
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btIsEmpty
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btGetRoot
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btGetRoot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    btSetRoot
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_btSetRoot
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortReal
 * Signature: ([DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortReal
  (JNIEnv *, jobject, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealPtr
 * Signature: ([D[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealPtr
  (JNIEnv *, jobject, jdoubleArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealInt
 * Signature: ([D[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealInt
  (JNIEnv *, jobject, jdoubleArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealBoolPtr
 * Signature: ([D[Z[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealBoolPtr
  (JNIEnv *, jobject, jdoubleArray, jbooleanArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealIntLong
 * Signature: ([D[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealIntLong
  (JNIEnv *, jobject, jdoubleArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealIntPtr
 * Signature: ([D[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealIntPtr
  (JNIEnv *, jobject, jdoubleArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealRealPtr
 * Signature: ([D[D[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealRealPtr
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealPtrPtrInt
 * Signature: ([D[J[J[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealPtrPtrInt
  (JNIEnv *, jobject, jdoubleArray, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealLongRealInt
 * Signature: ([D[J[D[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealLongRealInt
  (JNIEnv *, jobject, jdoubleArray, jlongArray, jdoubleArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealRealIntInt
 * Signature: ([D[D[I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealRealIntInt
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealRealRealInt
 * Signature: ([D[D[D[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealRealRealInt
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealRealRealPtr
 * Signature: ([D[D[D[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealRealRealPtr
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortRealRealRealBoolPtr
 * Signature: ([D[D[D[Z[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortRealRealRealBoolPtr
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jbooleanArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortInt
 * Signature: ([II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortInt
  (JNIEnv *, jobject, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntInt
 * Signature: ([I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntInt
  (JNIEnv *, jobject, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntPtr
 * Signature: ([I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntPtr
  (JNIEnv *, jobject, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntReal
 * Signature: ([I[DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntReal
  (JNIEnv *, jobject, jintArray, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntIntInt
 * Signature: ([I[I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntIntInt
  (JNIEnv *, jobject, jintArray, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntIntLong
 * Signature: ([I[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntIntLong
  (JNIEnv *, jobject, jintArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntIntPtr
 * Signature: ([I[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntIntPtr
  (JNIEnv *, jobject, jintArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntIntReal
 * Signature: ([I[I[DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntIntReal
  (JNIEnv *, jobject, jintArray, jintArray, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntPtrReal
 * Signature: ([I[J[DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntPtrReal
  (JNIEnv *, jobject, jintArray, jlongArray, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntIntIntPtr
 * Signature: ([I[I[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntIntIntPtr
  (JNIEnv *, jobject, jintArray, jintArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntPtrIntReal
 * Signature: ([I[J[I[DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntPtrIntReal
  (JNIEnv *, jobject, jintArray, jlongArray, jintArray, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLong
 * Signature: ([JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLong
  (JNIEnv *, jobject, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtr
 * Signature: ([J[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtr
  (JNIEnv *, jobject, jlongArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtrInt
 * Signature: ([J[J[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtrInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtrRealBool
 * Signature: ([J[J[D[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtrRealBool
  (JNIEnv *, jobject, jlongArray, jlongArray, jdoubleArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtrRealRealBool
 * Signature: ([J[J[D[D[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtrRealRealBool
  (JNIEnv *, jobject, jlongArray, jlongArray, jdoubleArray, jdoubleArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtrRealRealIntBool
 * Signature: ([J[J[D[D[I[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtrRealRealIntBool
  (JNIEnv *, jobject, jlongArray, jlongArray, jdoubleArray, jdoubleArray, jintArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtrPtrInt
 * Signature: ([J[J[J[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtrPtrInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtrPtrIntInt
 * Signature: ([J[J[J[I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtrPtrIntInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jlongArray, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortLongPtrPtrBoolInt
 * Signature: ([J[J[J[Z[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortLongPtrPtrBoolInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jlongArray, jbooleanArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortIntPtrIntIntBoolBool
 * Signature: ([I[J[I[I[Z[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortIntPtrIntIntBoolBool
  (JNIEnv *, jobject, jintArray, jlongArray, jintArray, jintArray, jbooleanArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownReal
 * Signature: ([DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownReal
  (JNIEnv *, jobject, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealPtr
 * Signature: ([D[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealPtr
  (JNIEnv *, jobject, jdoubleArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealInt
 * Signature: ([D[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealInt
  (JNIEnv *, jobject, jdoubleArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealBoolPtr
 * Signature: ([D[Z[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealBoolPtr
  (JNIEnv *, jobject, jdoubleArray, jbooleanArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealIntLong
 * Signature: ([D[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealIntLong
  (JNIEnv *, jobject, jdoubleArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealIntPtr
 * Signature: ([D[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealIntPtr
  (JNIEnv *, jobject, jdoubleArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealRealPtr
 * Signature: ([D[D[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealRealPtr
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealPtrPtrInt
 * Signature: ([D[J[J[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealPtrPtrInt
  (JNIEnv *, jobject, jdoubleArray, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealLongRealInt
 * Signature: ([D[J[D[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealLongRealInt
  (JNIEnv *, jobject, jdoubleArray, jlongArray, jdoubleArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealRealIntInt
 * Signature: ([D[D[I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealRealIntInt
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealRealRealInt
 * Signature: ([D[D[D[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealRealRealInt
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealRealRealPtr
 * Signature: ([D[D[D[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealRealRealPtr
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealPtrPtr
 * Signature: ([D[J[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealPtrPtr
  (JNIEnv *, jobject, jdoubleArray, jlongArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownRealRealRealBoolPtr
 * Signature: ([D[D[D[Z[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownRealRealRealBoolPtr
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jbooleanArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownInt
 * Signature: ([II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownInt
  (JNIEnv *, jobject, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntInt
 * Signature: ([I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntInt
  (JNIEnv *, jobject, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntPtr
 * Signature: ([I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntPtr
  (JNIEnv *, jobject, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntReal
 * Signature: ([I[DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntReal
  (JNIEnv *, jobject, jintArray, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntIntInt
 * Signature: ([I[I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntIntInt
  (JNIEnv *, jobject, jintArray, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntIntLong
 * Signature: ([I[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntIntLong
  (JNIEnv *, jobject, jintArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntIntPtr
 * Signature: ([I[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntIntPtr
  (JNIEnv *, jobject, jintArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntIntReal
 * Signature: ([I[I[DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntIntReal
  (JNIEnv *, jobject, jintArray, jintArray, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntIntIntPtr
 * Signature: ([I[I[I[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntIntIntPtr
  (JNIEnv *, jobject, jintArray, jintArray, jintArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntPtrIntReal
 * Signature: ([I[J[I[DI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntPtrIntReal
  (JNIEnv *, jobject, jintArray, jlongArray, jintArray, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLong
 * Signature: ([JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLong
  (JNIEnv *, jobject, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtr
 * Signature: ([J[JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtr
  (JNIEnv *, jobject, jlongArray, jlongArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtrInt
 * Signature: ([J[J[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtrInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtrRealBool
 * Signature: ([J[J[D[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtrRealBool
  (JNIEnv *, jobject, jlongArray, jlongArray, jdoubleArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtrRealRealBool
 * Signature: ([J[J[D[D[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtrRealRealBool
  (JNIEnv *, jobject, jlongArray, jlongArray, jdoubleArray, jdoubleArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtrRealRealIntBool
 * Signature: ([J[J[D[D[I[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtrRealRealIntBool
  (JNIEnv *, jobject, jlongArray, jlongArray, jdoubleArray, jdoubleArray, jintArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtrPtrInt
 * Signature: ([J[J[J[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtrPtrInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtrPtrIntInt
 * Signature: ([J[J[J[I[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtrPtrIntInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jlongArray, jintArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownLongPtrPtrBoolInt
 * Signature: ([J[J[J[Z[II)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownLongPtrPtrBoolInt
  (JNIEnv *, jobject, jlongArray, jlongArray, jlongArray, jbooleanArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    sortDownIntPtrIntIntBoolBool
 * Signature: ([I[J[I[I[Z[ZI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_sortDownIntPtrIntIntBoolBool
  (JNIEnv *, jobject, jintArray, jlongArray, jintArray, jintArray, jbooleanArray, jbooleanArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    calcMachineEpsilon
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_calcMachineEpsilon
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    calcGreComDiv
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_calcGreComDiv
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    calcSmaComMul
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_calcSmaComMul
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    selectSimpleValue
 * Signature: (DDJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_selectSimpleValue
  (JNIEnv *, jobject, jdouble, jdouble, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    relDiff
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_relDiff
  (JNIEnv *, jobject, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    calcBinomCoef
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_calcBinomCoef
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    swapPointers
 * Signature: ([J[J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_swapPointers
  (JNIEnv *, jobject, jlongArray, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    permuteIntArray
 * Signature: ([III[I)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_permuteIntArray
  (JNIEnv *, jobject, jintArray, jint, jint, jintArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    getRandomSubset
 * Signature: ([JI[JII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_getRandomSubset
  (JNIEnv *, jobject, jlongArray, jint, jlongArray, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    memccpy
 * Signature: (Ljava/lang/String;Ljava/lang/String;CI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_memccpy
  (JNIEnv *, jobject, jstring, jstring, jchar, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    printSysError
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_printSysError
  (JNIEnv *, jobject, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    escapeString
 * Signature: (Ljava/lang/String;ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_escapeString
  (JNIEnv *, jobject, jstring, jint, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipMisc
 * Method:    fileExists
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScipMisc_fileExists
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_zib_jscip_nativ_jni_JniScip */

#ifndef _Included_de_zib_jscip_nativ_jni_JniScip
#define _Included_de_zib_jscip_nativ_jni_JniScip
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    version
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_version
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    majorVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_majorVersion
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    minorVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_minorVersion
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    techVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_techVersion
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    subversion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_subversion
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printVersion
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printVersion
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printError
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printError
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    storeSolutionGap
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_storeSolutionGap
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    create
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_create
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_free
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getStage
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getStage
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printStage
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printStage
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getStatus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printStatus
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printStatus
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isTransformed
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isTransformed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isExactSolve
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isExactSolve
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isPresolveFinished
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isPresolveFinished
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    pressedCtrlC
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_pressedCtrlC
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isStopped
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isStopped
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setMessagehdlr
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setMessagehdlr
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getMessagehdlr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getMessagehdlr
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setMessagehdlrLogfile
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setMessagehdlrLogfile
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setMessagehdlrQuiet
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setMessagehdlrQuiet
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVerbLevel
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVerbLevel
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyPlugins
 * Signature: (JJZZZZZZZZZZZZZZZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyPlugins
  (JNIEnv *, jobject, jlong, jlong, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyProb
 * Signature: (JJJJZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyProb
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jboolean, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyOrigProb
 * Signature: (JJJJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyOrigProb
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyVars
 * Signature: (JJJJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyVars
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyOrigVars
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyOrigVars
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyConss
 * Signature: (JJJJZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyConss
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyOrigConss
 * Signature: (JJJJZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyOrigConss
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    convertCutsToConss
 * Signature: (JJJZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_convertCutsToConss
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyCuts
 * Signature: (JJJJZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyCuts
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyParamSettings
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyParamSettings
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSubscipDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSubscipDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copy
 * Signature: (JJJJLjava/lang/String;ZZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copy
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jstring, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    copyOrig
 * Signature: (JJJJLjava/lang/String;ZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_copyOrig
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jstring, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isParamFixed
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isParamFixed
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getParam
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBoolParam
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBoolParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getIntParam
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getIntParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLongintParam
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLongintParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRealParam
 * Signature: (JLjava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRealParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getCharParam
 * Signature: (JLjava/lang/String;)C
 */
JNIEXPORT jchar JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getCharParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getStringParam
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getStringParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    fixParam
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_fixParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    unfixParam
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_unfixParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setParam
 * Signature: (JLjava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setParam
  (JNIEnv *, jobject, jlong, jstring, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgBoolParam
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgBoolParam
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setBoolParam
 * Signature: (JLjava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setBoolParam
  (JNIEnv *, jobject, jlong, jstring, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgIntParam
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgIntParam
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setIntParam
 * Signature: (JLjava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setIntParam
  (JNIEnv *, jobject, jlong, jstring, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgLongintParam
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgLongintParam
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setLongintParam
 * Signature: (JLjava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setLongintParam
  (JNIEnv *, jobject, jlong, jstring, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgRealParam
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgRealParam
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setRealParam
 * Signature: (JLjava/lang/String;D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setRealParam
  (JNIEnv *, jobject, jlong, jstring, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgCharParam
 * Signature: (JJC)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgCharParam
  (JNIEnv *, jobject, jlong, jlong, jchar);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setCharParam
 * Signature: (JLjava/lang/String;C)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setCharParam
  (JNIEnv *, jobject, jlong, jstring, jchar);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgStringParam
 * Signature: (JJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgStringParam
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setStringParam
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setStringParam
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    readParams
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_readParams
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeParams
 * Signature: (JLjava/lang/String;ZZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeParams
  (JNIEnv *, jobject, jlong, jstring, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    resetParam
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_resetParam
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    resetParams
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_resetParams
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setEmphasis
 * Signature: (JIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setEmphasis
  (JNIEnv *, jobject, jlong, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setSubscipsOff
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setSubscipsOff
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setHeuristics
 * Signature: (JIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setHeuristics
  (JNIEnv *, jobject, jlong, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setPresolving
 * Signature: (JIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setPresolving
  (JNIEnv *, jobject, jlong, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setSeparating
 * Signature: (JIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setSeparating
  (JNIEnv *, jobject, jlong, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getParams
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getParams
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNParams
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNParams
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    includeReaderBasic
 * Signature: (J[JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_includeReaderBasic
  (JNIEnv *, jobject, jlong, jlongArray, jstring, jstring, jstring, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findReader
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findReader
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getReaders
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getReaders
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNReaders
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNReaders
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findPricer
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findPricer
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPricers
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPricers
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPricers
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPricers
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNActivePricers
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNActivePricers
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setPricerPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setPricerPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    activatePricer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_activatePricer
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    deactivatePricer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_deactivatePricer
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findConshdlr
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findConshdlr
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getConshdlrs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getConshdlrs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNConshdlrs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNConshdlrs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findConflicthdlr
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findConflicthdlr
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getConflicthdlrs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getConflicthdlrs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNConflicthdlrs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNConflicthdlrs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConflicthdlrPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConflicthdlrPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findPresol
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findPresol
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPresols
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPresols
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPresols
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPresols
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setPresolPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setPresolPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findRelax
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findRelax
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRelaxs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRelaxs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNRelaxs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNRelaxs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setRelaxPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setRelaxPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findSepa
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findSepa
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSepas
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSepas
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNSepas
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNSepas
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setSepaPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setSepaPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findProp
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findProp
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getProps
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getProps
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNProps
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNProps
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setPropPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setPropPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setPropPresolPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setPropPresolPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findHeur
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findHeur
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getHeurs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getHeurs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNHeurs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNHeurs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setHeurPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setHeurPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findEventhdlr
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findEventhdlr
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getEventhdlrs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getEventhdlrs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNEventhdlrs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNEventhdlrs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findNodesel
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findNodesel
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNodesels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNodesels
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNodesels
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNodesels
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNodeselStdPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNodeselStdPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNodeselMemsavePriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNodeselMemsavePriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNodesel
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNodesel
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    includeBranchruleBasic
 * Signature: (JLjava/lang/String;Ljava/lang/String;IIDJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_includeBranchruleBasic
  (JNIEnv *, jobject, jlong, jstring, jstring, jint, jint, jdouble, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findBranchrule
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findBranchrule
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBranchrules
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBranchrules
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNBranchrules
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNBranchrules
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setBranchrulePriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setBranchrulePriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setBranchruleMaxdepth
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setBranchruleMaxdepth
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setBranchruleMaxbounddist
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setBranchruleMaxbounddist
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findDisp
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findDisp
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getDisps
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getDisps
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDisps
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDisps
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    autoselectDisps
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_autoselectDisps
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    includeNlpi
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_includeNlpi
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findNlpi
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findNlpi
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlpis
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlpis
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNlpis
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNlpis
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNlpiPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNlpiPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    includeExternalCodeInformation
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_includeExternalCodeInformation
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getExternalCodeNames
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getExternalCodeNames
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getExternalCodeDescriptions
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getExternalCodeDescriptions
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNExternalCodes
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNExternalCodes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printExternalCodes
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printExternalCodes
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    existsDialog
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_existsDialog
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    captureDialog
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_captureDialog
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    releaseDialog
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_releaseDialog
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setRootDialog
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setRootDialog
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRootDialog
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRootDialog
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addDialogEntry
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addDialogEntry
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addDialogInputLine
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addDialogInputLine
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addDialogHistoryLine
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addDialogHistoryLine
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    startInteraction
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_startInteraction
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createProbBasic
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createProbBasic
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    readProb
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_readProb
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeOrigProblem
 * Signature: (JLjava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeOrigProblem
  (JNIEnv *, jobject, jlong, jstring, jstring, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeTransProblem
 * Signature: (JLjava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeTransProblem
  (JNIEnv *, jobject, jlong, jstring, jstring, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeProb
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeProb
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    permuteProb
 * Signature: (JIZZZZZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_permuteProb
  (JNIEnv *, jobject, jlong, jint, jboolean, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getProbData
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getProbData
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setProbData
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setProbData
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getProbName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getProbName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setProbName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setProbName
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getObjsense
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getObjsense
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setObjsense
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setObjsense
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addObjoffset
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addObjoffset
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getOrigObjoffset
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getOrigObjoffset
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getOrigObjscale
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getOrigObjscale
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTransObjoffset
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTransObjoffset
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTransObjscale
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTransObjscale
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setObjlimit
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setObjlimit
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getObjlimit
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getObjlimit
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setObjIntegral
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setObjIntegral
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isObjIntegral
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isObjIntegral
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getObjNorm
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getObjNorm
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVar
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addPricedVar
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addPricedVar
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    delVar
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_delVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNBinVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNBinVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNIntVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNIntVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNImplVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNImplVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNContVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNContVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNObjVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNObjVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getFixedVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getFixedVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNFixedVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNFixedVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getOrigVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getOrigVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNOrigVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNOrigVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNOrigBinVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNOrigBinVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNOrigIntVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNOrigIntVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNOrigImplVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNOrigImplVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNOrigContVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNOrigContVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNTotalVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNTotalVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findVar
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findVar
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    allVarsInProb
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_allVarsInProb
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    delCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_delCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findOrigCons
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findOrigCons
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    findCons
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_findCons
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNUpgrConss
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNUpgrConss
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNConss
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNConss
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getConss
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getConss
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNOrigConss
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNOrigConss
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getOrigConss
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getOrigConss
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConsNode
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConsNode
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConsLocal
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConsLocal
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    delConsNode
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_delConsNode
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    delConsLocal
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_delConsLocal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLocalOrigEstimate
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLocalOrigEstimate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLocalTransEstimate
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLocalTransEstimate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLocalDualbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLocalDualbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLocalLowerbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLocalLowerbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNodeDualbound
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNodeDualbound
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNodeLowerbound
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNodeLowerbound
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateLocalDualbound
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateLocalDualbound
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateLocalLowerbound
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateLocalLowerbound
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateNodeDualbound
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateNodeDualbound
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateNodeLowerbound
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateNodeLowerbound
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgChildPrio
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgChildPrio
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    transformProb
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_transformProb
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    presolve
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_presolve
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    solve
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_solve
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeSolve
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeSolve
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeTransform
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeTransform
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    interruptSolve
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_interruptSolve
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    restartSolve
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_restartSolve
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isInRestart
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isInRestart
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createVarBasic
 * Signature: (JLjava/lang/String;DDDI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createVarBasic
  (JNIEnv *, jobject, jlong, jstring, jdouble, jdouble, jdouble, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeVarName
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeVarName
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeVarsList
 * Signature: (JJ[JIZC)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeVarsList
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jint, jboolean, jchar);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeVarsLinearsum
 * Signature: (JJ[J[DIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeVarsLinearsum
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jdoubleArray, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeVarsPolynomial
 * Signature: (JJ[[J[[D[D[IIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeVarsPolynomial
  (JNIEnv *, jobject, jlong, jlong, jobjectArray, jobjectArray, jdoubleArray, jintArray, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    captureVar
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_captureVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    releaseVar
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_releaseVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarName
 * Signature: (JJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarName
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    transformVar
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_transformVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    transformVars
 * Signature: (JI[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_transformVars
  (JNIEnv *, jobject, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTransformedVar
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTransformedVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTransformedVars
 * Signature: (JI[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTransformedVars
  (JNIEnv *, jobject, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNegatedVar
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNegatedVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNegatedVars
 * Signature: (JI[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNegatedVars
  (JNIEnv *, jobject, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    flattenVarAggregationGraph
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_flattenVarAggregationGraph
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getActiveVars
 * Signature: (J[J[II)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getActiveVars
  (JNIEnv *, jobject, jlong, jlongArray, jintArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarRedcost
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarRedcost
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarImplRedcost
 * Signature: (JJZ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarImplRedcost
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarFarkasCoef
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarFarkasCoef
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarSol
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarSols
 * Signature: (JI[J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarSols
  (JNIEnv *, jobject, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearRelaxSolVals
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearRelaxSolVals
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setRelaxSolVal
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setRelaxSolVal
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setRelaxSolVals
 * Signature: (JI[J[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setRelaxSolVals
  (JNIEnv *, jobject, jlong, jint, jlongArray, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setRelaxSolValsSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setRelaxSolValsSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isRelaxSolValid
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isRelaxSolValid
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    markRelaxSolValid
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_markRelaxSolValid
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    markRelaxSolInvalid
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_markRelaxSolInvalid
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRelaxSolVal
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRelaxSolVal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRelaxSolObj
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRelaxSolObj
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    startStrongbranch
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_startStrongbranch
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    endStrongbranch
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_endStrongbranch
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarStrongbranchNode
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarStrongbranchNode
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarStrongbranchLPAge
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarStrongbranchLPAge
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarNStrongbranchs
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarNStrongbranchs
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVarLocks
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVarLocks
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    lockVarCons
 * Signature: (JJJZZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_lockVarCons
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    unlockVarCons
 * Signature: (JJJZZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_unlockVarCons
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarObj
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarObj
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVarObj
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVarObj
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    adjustedVarLb
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_adjustedVarLb
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    adjustedVarUb
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_adjustedVarUb
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarLb
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarLb
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarUb
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarUb
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarLbNode
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarLbNode
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarUbNode
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarUbNode
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarLbGlobal
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarLbGlobal
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarUbGlobal
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarUbGlobal
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarLbLazy
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarLbLazy
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarUbLazy
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarUbLazy
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    computeVarLbGlobal
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_computeVarLbGlobal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    computeVarUbGlobal
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_computeVarUbGlobal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    computeVarLbLocal
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_computeVarLbLocal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    computeVarUbLocal
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_computeVarUbLocal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    calcCliquePartition
 * Signature: (J[JI[I)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_calcCliquePartition
  (JNIEnv *, jobject, jlong, jlongArray, jint, jintArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    calcNegatedCliquePartition
 * Signature: (J[JI[I)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_calcNegatedCliquePartition
  (JNIEnv *, jobject, jlong, jlongArray, jint, jintArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNCliques
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNCliques
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getCliques
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getCliques
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    haveVarsCommonClique
 * Signature: (JJZJZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_haveVarsCommonClique
  (JNIEnv *, jobject, jlong, jlong, jboolean, jlong, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeCliqueGraph
 * Signature: (JLjava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeCliqueGraph
  (JNIEnv *, jobject, jlong, jstring, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarBranchFactor
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarBranchFactor
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    scaleVarBranchFactor
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_scaleVarBranchFactor
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVarBranchFactor
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVarBranchFactor
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarBranchPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarBranchPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateVarBranchPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateVarBranchPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVarBranchPriority
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVarBranchPriority
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarBranchDirection
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarBranchDirection
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarType
 * Signature: (JJI)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarType
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    doNotAggr
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_doNotAggr
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    doNotMultaggr
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_doNotMultaggr
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    doNotMultaggrVar
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_doNotMultaggrVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    markDoNotMultaggrVar
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_markDoNotMultaggrVar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    enableVarHistory
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_enableVarHistory
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    disableVarHistory
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_disableVarHistory
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateVarPseudocost
 * Signature: (JJDDD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateVarPseudocost
  (JNIEnv *, jobject, jlong, jlong, jdouble, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocostVal
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocostVal
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocostValCurrentRun
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocostValCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocost
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocost
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocostCurrentRun
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocostCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocostCount
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocostCount
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocostCountCurrentRun
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocostCountCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocostScore
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocostScore
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarPseudocostScoreCurrentRun
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarPseudocostScoreCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarVSIDS
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarVSIDS
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarVSIDSCurrentRun
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarVSIDSCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarConflictScore
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarConflictScore
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarConflictScoreCurrentRun
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarConflictScoreCurrentRun
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarConflictlengthScore
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarConflictlengthScore
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarConflictlengthScoreCurrentRun
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarConflictlengthScoreCurrentRun
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgConflictlength
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgConflictlength
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgConflictlengthCurrentRun
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgConflictlengthCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgInferences
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgInferences
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgInferencesCurrentRun
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgInferencesCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgInferenceScore
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgInferenceScore
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgInferenceScoreCurrentRun
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgInferenceScoreCurrentRun
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    initVarBranchStats
 * Signature: (JJDDDDDDDDDD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_initVarBranchStats
  (JNIEnv *, jobject, jlong, jlong, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgCutoffs
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgCutoffs
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgCutoffsCurrentRun
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgCutoffsCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgCutoffScore
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgCutoffScore
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgCutoffScoreCurrentRun
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgCutoffScoreCurrentRun
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgInferenceCutoffScore
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgInferenceCutoffScore
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarAvgInferenceCutoffScoreCurrentRun
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarAvgInferenceCutoffScoreCurrentRun
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printVar
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printVar
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isConflictAnalysisApplicable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isConflictAnalysisApplicable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    initConflictAnalysis
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_initConflictAnalysis
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConflictLb
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConflictLb
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConflictRelaxedLb
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConflictRelaxedLb
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConflictUb
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConflictUb
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConflictRelaxedUb
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConflictRelaxedUb
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConflictBd
 * Signature: (JJIJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConflictBd
  (JNIEnv *, jobject, jlong, jlong, jint, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConflictRelaxedBd
 * Signature: (JJIJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConflictRelaxedBd
  (JNIEnv *, jobject, jlong, jlong, jint, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConflictBinvar
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConflictBinvar
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isConflictVarUsed
 * Signature: (JJIJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isConflictVarUsed
  (JNIEnv *, jobject, jlong, jlong, jint, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getConflictVarLb
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getConflictVarLb
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getConflictVarUb
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getConflictVarUb
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    analyzeConflict
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_analyzeConflict
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    analyzeConflictCons
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_analyzeConflictCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createCons
 * Signature: (JLjava/lang/String;JJZZZZZZZZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createCons
  (JNIEnv *, jobject, jlong, jstring, jlong, jlong, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    captureCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_captureCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    releaseCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_releaseCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgConsName
 * Signature: (JJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgConsName
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsInitial
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsInitial
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsSeparated
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsSeparated
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsEnforced
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsEnforced
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsChecked
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsChecked
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsPropagated
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsPropagated
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsLocal
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsLocal
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsModifiable
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsModifiable
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsDynamic
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsDynamic
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsRemovable
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsRemovable
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setConsStickingAtNode
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setConsStickingAtNode
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateConsFlags
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateConsFlags
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    transformCons
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_transformCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    transformConss
 * Signature: (JI[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_transformConss
  (JNIEnv *, jobject, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTransformedCons
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTransformedCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTransformedConss
 * Signature: (JI[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTransformedConss
  (JNIEnv *, jobject, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConsAge
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConsAge
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    incConsAge
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_incConsAge
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    resetConsAge
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_resetConsAge
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    enableCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_enableCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    disableCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_disableCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    enableConsSeparation
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_enableConsSeparation
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    disableConsSeparation
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_disableConsSeparation
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    enableConsPropagation
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_enableConsPropagation
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    disableConsPropagation
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_disableConsPropagation
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    markConsPropagate
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_markConsPropagate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    unmarkConsPropagate
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_unmarkConsPropagate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addConsLocks
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addConsLocks
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    checkCons
 * Signature: (JJJZZZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_checkCons
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    enfopsCons
 * Signature: (JJZZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_enfopsCons
  (JNIEnv *, jobject, jlong, jlong, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    enfolpCons
 * Signature: (JJZ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_enfolpCons
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    initlpCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_initlpCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    sepalpCons
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_sepalpCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    sepasolCons
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_sepasolCons
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    propCons
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_propCons
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    respropCons
 * Signature: (JJJIIJD)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_respropCons
  (JNIEnv *, jobject, jlong, jlong, jlong, jint, jint, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    activeCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_activeCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    deactiveCons
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_deactiveCons
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printCons
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printCons
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    hasCurrentNodeLP
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_hasCurrentNodeLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isLPConstructed
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isLPConstructed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    constructLP
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_constructLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    flushLP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_flushLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPSolstat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPSolstat
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isLPRelax
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isLPRelax
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPColumnObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPColumnObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPLooseObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPLooseObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getGlobalPseudoObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getGlobalPseudoObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPseudoObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPseudoObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isRootLPRelax
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isRootLPRelax
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPRootObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPRootObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPRootColumnObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPRootColumnObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPRootLooseObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPRootLooseObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPCols
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPCols
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPCols
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPCols
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPRows
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPRows
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPRows
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPRows
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    allColsInLP
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_allColsInLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isLPSolBasic
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isLPSolBasic
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPBasisInd
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPBasisInd
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPBInvRow
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPBInvRow
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPBInvCol
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPBInvCol
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPBInvARow
 * Signature: (JI[D)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPBInvARow
  (JNIEnv *, jobject, jlong, jint, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPBInvACol
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPBInvACol
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeLP
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeLP
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeMIP
 * Signature: (JLjava/lang/String;ZZZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeMIP
  (JNIEnv *, jobject, jlong, jstring, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLPI
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLPI
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printLPSolutionQuality
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printLPSolutionQuality
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    computeLPRelIntPoint
 * Signature: (JZZCDI[J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_computeLPRelIntPoint
  (JNIEnv *, jobject, jlong, jboolean, jboolean, jchar, jdouble, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getColRedcost
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getColRedcost
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getColFarkasCoef
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getColFarkasCoef
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    markColNotRemovableLocal
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_markColNotRemovableLocal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createRowCons
 * Signature: (JJLjava/lang/String;I[J[DDDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createRowCons
  (JNIEnv *, jobject, jlong, jlong, jstring, jint, jlongArray, jdoubleArray, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createRowSepa
 * Signature: (JJLjava/lang/String;I[J[DDDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createRowSepa
  (JNIEnv *, jobject, jlong, jlong, jstring, jint, jlongArray, jdoubleArray, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createRowUnspec
 * Signature: (JLjava/lang/String;I[J[DDDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createRowUnspec
  (JNIEnv *, jobject, jlong, jstring, jint, jlongArray, jdoubleArray, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createRow
 * Signature: (JLjava/lang/String;I[J[DDDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createRow
  (JNIEnv *, jobject, jlong, jstring, jint, jlongArray, jdoubleArray, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createEmptyRowCons
 * Signature: (JJLjava/lang/String;DDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createEmptyRowCons
  (JNIEnv *, jobject, jlong, jlong, jstring, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createEmptyRowSepa
 * Signature: (JJLjava/lang/String;DDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createEmptyRowSepa
  (JNIEnv *, jobject, jlong, jlong, jstring, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createEmptyRowUnspec
 * Signature: (JLjava/lang/String;DDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createEmptyRowUnspec
  (JNIEnv *, jobject, jlong, jstring, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createEmptyRow
 * Signature: (JLjava/lang/String;DDZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createEmptyRow
  (JNIEnv *, jobject, jlong, jstring, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    captureRow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_captureRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    releaseRow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_releaseRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgRowLhs
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgRowLhs
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgRowRhs
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgRowRhs
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    cacheRowExtensions
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_cacheRowExtensions
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    flushRowExtensions
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_flushRowExtensions
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVarToRow
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVarToRow
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVarsToRow
 * Signature: (JJI[J[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVarsToRow
  (JNIEnv *, jobject, jlong, jlong, jint, jlongArray, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addVarsToRowSameCoef
 * Signature: (JJI[JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addVarsToRowSameCoef
  (JNIEnv *, jobject, jlong, jlong, jint, jlongArray, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    makeRowIntegral
 * Signature: (JJDDJDZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_makeRowIntegral
  (JNIEnv *, jobject, jlong, jlong, jdouble, jdouble, jlong, jdouble, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    markRowNotRemovableLocal
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_markRowNotRemovableLocal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowMinCoef
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowMinCoef
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowMaxCoef
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowMaxCoef
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowMinActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowMinActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowMaxActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowMaxActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    recalcRowLPActivity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_recalcRowLPActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowLPActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowLPActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowLPFeasibility
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowLPFeasibility
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    recalcRowPseudoActivity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_recalcRowPseudoActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowPseudoActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowPseudoActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowPseudoFeasibility
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowPseudoFeasibility
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    recalcRowActivity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_recalcRowActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowFeasibility
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowFeasibility
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowSolActivity
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowSolActivity
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRowSolFeasibility
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRowSolFeasibility
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printRow
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printRow
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isNLPEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isNLPEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    enableNLP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_enableNLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isNLPConstructed
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isNLPConstructed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    hasNLPContinuousNonlinearity
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_hasNLPContinuousNonlinearity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPVars
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNLPVars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNLPVars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPVarsNonlinearity
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPVarsNonlinearity
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPVarsLbDualsol
 * Signature: (J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPVarsLbDualsol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPVarsUbDualsol
 * Signature: (J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPVarsUbDualsol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPNlRows
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPNlRows
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNLPNlRows
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNLPNlRows
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addNlRow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addNlRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    flushNLP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_flushNLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNLPInitialGuess
 * Signature: (J[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNLPInitialGuess
  (JNIEnv *, jobject, jlong, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNLPInitialGuessSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNLPInitialGuessSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    solveNLP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_solveNLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPSolstat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPSolstat
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPTermstat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPTermstat
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPObjval
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPObjval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    hasNLPSolution
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_hasNLPSolution
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPIntPar
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPIntPar
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNLPIntPar
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNLPIntPar
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPRealPar
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPRealPar
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNLPRealPar
 * Signature: (JID)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNLPRealPar
  (JNIEnv *, jobject, jlong, jint, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPStringPar
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPStringPar
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNLPStringPar
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNLPStringPar
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeNLP
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeNLP
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    startDiveNLP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_startDiveNLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    endDiveNLP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_endDiveNLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarObjDiveNLP
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarObjDiveNLP
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarBoundsDiveNLP
 * Signature: (JJDD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarBoundsDiveNLP
  (JNIEnv *, jobject, jlong, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarsBoundsDiveNLP
 * Signature: (JI[J[D[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarsBoundsDiveNLP
  (JNIEnv *, jobject, jlong, jint, jlongArray, jdoubleArray, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    solveDiveNLP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_solveDiveNLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createEmptyNlRow
 * Signature: (JLjava/lang/String;DD)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createEmptyNlRow
  (JNIEnv *, jobject, jlong, jstring, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createNlRowFromRow
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createNlRowFromRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    captureNlRow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_captureNlRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    releaseNlRow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_releaseNlRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgNlRowLhs
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgNlRowLhs
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgNlRowRhs
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgNlRowRhs
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgNlRowConstant
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgNlRowConstant
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addLinearCoefToNlRow
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addLinearCoefToNlRow
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addLinearCoefsToNlRow
 * Signature: (JJI[J[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addLinearCoefsToNlRow
  (JNIEnv *, jobject, jlong, jlong, jint, jlongArray, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgNlRowLinearCoef
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgNlRowLinearCoef
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addQuadVarToNlRow
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addQuadVarToNlRow
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addQuadVarsToNlRow
 * Signature: (JJI[J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addQuadVarsToNlRow
  (JNIEnv *, jobject, jlong, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNlRowExprtreeParam
 * Signature: (JJID)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNlRowExprtreeParam
  (JNIEnv *, jobject, jlong, jlong, jint, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setNlRowExprtreeParams
 * Signature: (JJ[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setNlRowExprtreeParams
  (JNIEnv *, jobject, jlong, jlong, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    recalcNlRowNLPActivity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_recalcNlRowNLPActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowNLPActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowNLPActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowNLPFeasibility
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowNLPFeasibility
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    recalcNlRowPseudoActivity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_recalcNlRowPseudoActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowPseudoActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowPseudoActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowPseudoFeasibility
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowPseudoFeasibility
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    recalcNlRowActivity
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_recalcNlRowActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowActivity
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowFeasibility
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowFeasibility
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowSolActivity
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowSolActivity
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowSolFeasibility
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowSolFeasibility
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNlRowActivityBounds
 * Signature: (JJ[D[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNlRowActivityBounds
  (JNIEnv *, jobject, jlong, jlong, jdoubleArray, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printNlRow
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printNlRow
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getCutEfficacy
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getCutEfficacy
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isCutEfficacious
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isCutEfficacious
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isEfficacious
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isEfficacious
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVectorEfficacyNorm
 * Signature: (J[DI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVectorEfficacyNorm
  (JNIEnv *, jobject, jlong, jdoubleArray, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addCut
 * Signature: (JJJZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addCut
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addPoolCut
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addPoolCut
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    delPoolCut
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_delPoolCut
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPoolCuts
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPoolCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPoolCuts
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPoolCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getGlobalCutpool
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getGlobalCutpool
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createCutpool
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createCutpool
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeCutpool
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeCutpool
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addRowCutpool
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addRowCutpool
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addNewRowCutpool
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addNewRowCutpool
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    delRowCutpool
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_delRowCutpool
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    separateCutpool
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_separateCutpool
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    separateSolCutpool
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_separateSolCutpool
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addDelayedPoolCut
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addDelayedPoolCut
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    delDelayedPoolCut
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_delDelayedPoolCut
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getDelayedPoolCuts
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getDelayedPoolCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDelayedPoolCuts
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDelayedPoolCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getDelayedGlobalCutpool
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getDelayedGlobalCutpool
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getCuts
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNCuts
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearCuts
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    removeInefficaciousCuts
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_removeInefficaciousCuts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    startDive
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_startDive
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    endDive
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_endDive
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgCutoffboundDive
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgCutoffboundDive
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarObjDive
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarObjDive
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarLbDive
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarLbDive
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarUbDive
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarUbDive
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addRowDive
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addRowDive
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgRowLhsDive
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgRowLhsDive
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgRowRhsDive
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgRowRhsDive
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarObjDive
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarObjDive
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarLbDive
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarLbDive
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getVarUbDive
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getVarUbDive
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLastDivenode
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLastDivenode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    inDive
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_inDive
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    inProbing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_inProbing
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    startProbing
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_startProbing
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    newProbingNode
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_newProbingNode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getProbingDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getProbingDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    backtrackProbing
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_backtrackProbing
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    endProbing
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_endProbing
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarLbProbing
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarLbProbing
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgVarUbProbing
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgVarUbProbing
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    fixVarProbing
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_fixVarProbing
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    propagateProbingImplications
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_propagateProbingImplications
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPBranchCands
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPBranchCands
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioLPBranchCands
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioLPBranchCands
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNExternBranchCands
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNExternBranchCands
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioExternBranchCands
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioExternBranchCands
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioExternBranchBins
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioExternBranchBins
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioExternBranchInts
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioExternBranchInts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioExternBranchImpls
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioExternBranchImpls
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioExternBranchConts
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioExternBranchConts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addExternBranchCand
 * Signature: (JJDD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addExternBranchCand
  (JNIEnv *, jobject, jlong, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearExternBranchCands
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearExternBranchCands
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    containsExternBranchCand
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_containsExternBranchCand
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPseudoBranchCands
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPseudoBranchCands
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioPseudoBranchCands
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioPseudoBranchCands
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioPseudoBranchBins
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioPseudoBranchBins
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioPseudoBranchInts
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioPseudoBranchInts
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrioPseudoBranchImpls
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrioPseudoBranchImpls
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBranchScore
 * Signature: (JJDD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBranchScore
  (JNIEnv *, jobject, jlong, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBranchScoreMultiple
 * Signature: (JJI[D)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBranchScoreMultiple
  (JNIEnv *, jobject, jlong, jlong, jint, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBranchingPoint
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBranchingPoint
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    calcNodeselPriority
 * Signature: (JJID)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_calcNodeselPriority
  (JNIEnv *, jobject, jlong, jlong, jint, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    calcChildEstimate
 * Signature: (JJD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_calcChildEstimate
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createChild
 * Signature: (JDD)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createChild
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    branchVarValNary
 * Signature: (JJDIDD)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_branchVarValNary
  (JNIEnv *, jobject, jlong, jlong, jdouble, jint, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    branchLP
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_branchLP
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    branchExtern
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_branchExtern
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    branchPseudo
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_branchPseudo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createLPSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createLPSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createNLPSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createNLPSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createRelaxSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createRelaxSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createPseudoSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createPseudoSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createCurrentSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createCurrentSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createUnknownSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createUnknownSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createOrigSol
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createOrigSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createSolCopy
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createSolCopy
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createSolCopyRemoveInfiniteFixings
 * Signature: (JJ[Z)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createSolCopyRemoveInfiniteFixings
  (JNIEnv *, jobject, jlong, jlong, jbooleanArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    linkLPSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_linkLPSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    linkNLPSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_linkNLPSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    linkRelaxSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_linkRelaxSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    linkPseudoSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_linkPseudoSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    linkCurrentSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_linkCurrentSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    unlinkSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_unlinkSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setSolVal
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setSolVal
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setSolVals
 * Signature: (JJI[J[D)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setSolVals
  (JNIEnv *, jobject, jlong, jlong, jint, jlongArray, jdoubleArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    incSolVal
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_incSolVal
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolVal
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolVal
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolVals
 * Signature: (JJI[J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolVals
  (JNIEnv *, jobject, jlong, jlong, jint, jlongArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolOrigObj
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolOrigObj
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolTransObj
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolTransObj
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    transformObj
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_transformObj
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    retransformObj
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_retransformObj
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolTime
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolTime
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolRunnum
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolRunnum
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolNodenum
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolNodenum
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolHeur
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolHeur
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    areSolsEqual
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_areSolsEqual
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printSol
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printSol
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printTransSol
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printTransSol
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printRay
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printRay
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNSols
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNSols
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSols
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSols
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBestSol
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBestSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printBestSol
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printBestSol
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printBestTransSol
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printBestTransSol
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    roundSol
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_roundSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    retransformSol
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_retransformSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    readSol
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_readSol
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addSol
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    addCurrentSol
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_addCurrentSol
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    trySol
 * Signature: (JJZZZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_trySol
  (JNIEnv *, jobject, jlong, jlong, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    tryCurrentSol
 * Signature: (JJZZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_tryCurrentSol
  (JNIEnv *, jobject, jlong, jlong, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    checkSol
 * Signature: (JJZZZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_checkSol
  (JNIEnv *, jobject, jlong, jlong, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    checkSolOrig
 * Signature: (JJZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_checkSolOrig
  (JNIEnv *, jobject, jlong, jlong, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    hasPrimalRay
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_hasPrimalRay
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPrimalRayVal
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPrimalRayVal
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    catchEvent
 * Signature: (JIJJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_catchEvent
  (JNIEnv *, jobject, jlong, jint, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    dropEvent
 * Signature: (JIJJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_dropEvent
  (JNIEnv *, jobject, jlong, jint, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    catchVarEvent
 * Signature: (JJIJJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_catchVarEvent
  (JNIEnv *, jobject, jlong, jlong, jint, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    dropVarEvent
 * Signature: (JJIJJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_dropVarEvent
  (JNIEnv *, jobject, jlong, jlong, jint, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    catchRowEvent
 * Signature: (JJIJJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_catchRowEvent
  (JNIEnv *, jobject, jlong, jlong, jint, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    dropRowEvent
 * Signature: (JJIJJI)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_dropRowEvent
  (JNIEnv *, jobject, jlong, jlong, jint, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getCurrentNode
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getCurrentNode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRootNode
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRootNode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    inRepropagation
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_inRepropagation
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNChildren
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNChildren
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNSiblings
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNSiblings
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLeaves
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLeaves
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPrioChild
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPrioChild
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPrioSibling
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPrioSibling
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBestChild
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBestChild
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBestSibling
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBestSibling
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBestLeaf
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBestLeaf
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBestNode
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBestNode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBestboundNode
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBestboundNode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    cutoffNode
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_cutoffNode
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    repropagateNode
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_repropagateNode
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getCutoffdepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getCutoffdepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRepropdepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRepropdepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printNodeRootPath
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printNodeRootPath
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNRuns
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNRuns
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNodes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNodes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNTotalNodes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNTotalNodes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNodesLeft
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNodesLeft
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNRootLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNRootLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNRootFirstLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNRootFirstLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrimalLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrimalLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrimalLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrimalLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDualLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDualLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDualLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDualLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNBarrierLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNBarrierLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNBarrierLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNBarrierLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNResolveLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNResolveLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNResolveLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNResolveLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrimalResolveLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrimalResolveLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPrimalResolveLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPrimalResolveLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDualResolveLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDualResolveLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDualResolveLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDualResolveLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNodeLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNodeLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNodeLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNodeLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNodeInitLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNodeInitLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNNodeInitLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNNodeInitLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDivingLPs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDivingLPs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNDivingLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNDivingLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNStrongbranchs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNStrongbranchs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNStrongbranchLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNStrongbranchLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNRootStrongbranchs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNRootStrongbranchs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNRootStrongbranchLPIterations
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNRootStrongbranchLPIterations
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPriceRounds
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPriceRounds
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPricevars
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPricevars
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPricevarsFound
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPricevarsFound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNPricevarsApplied
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNPricevarsApplied
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNSepaRounds
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNSepaRounds
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNCutsFound
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNCutsFound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNCutsFoundRound
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNCutsFoundRound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNCutsApplied
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNCutsApplied
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNConflictConssFound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNConflictConssFound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNConflictConssFoundNode
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNConflictConssFoundNode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNConflictConssApplied
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNConflictConssApplied
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getFocusDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getFocusDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getMaxDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getMaxDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getMaxTotalDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getMaxTotalDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNBacktracks
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNBacktracks
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPlungeDepth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPlungeDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNActiveConss
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNActiveConss
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNEnabledConss
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNEnabledConss
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgDualbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgDualbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgLowerbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgLowerbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getDualbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getDualbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLowerbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLowerbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getDualboundRoot
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getDualboundRoot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getLowerboundRoot
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getLowerboundRoot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getFirstLPDualboundRoot
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getFirstLPDualboundRoot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getFirstLPLowerboundRoot
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getFirstLPLowerboundRoot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPrimalbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPrimalbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getUpperbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getUpperbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getCutoffbound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getCutoffbound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    updateCutoffbound
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_updateCutoffbound
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isPrimalboundSol
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isPrimalboundSol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getGap
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getGap
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTransGap
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTransGap
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNSolsFound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNSolsFound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNLimSolsFound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNLimSolsFound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNBestSolsFound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNBestSolsFound
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgPseudocost
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgPseudocost
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgPseudocostCurrentRun
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgPseudocostCurrentRun
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgPseudocostCount
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgPseudocostCount
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgPseudocostCountCurrentRun
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgPseudocostCountCurrentRun
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgPseudocostScore
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgPseudocostScore
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgPseudocostScoreCurrentRun
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgPseudocostScoreCurrentRun
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgConflictScore
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgConflictScore
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgConflictScoreCurrentRun
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgConflictScoreCurrentRun
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgConflictlengthScore
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgConflictlengthScore
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgConflictlengthScoreCurrentRun
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgConflictlengthScoreCurrentRun
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgInferences
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgInferences
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgInferencesCurrentRun
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgInferencesCurrentRun
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgInferenceScore
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgInferenceScore
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgInferenceScoreCurrentRun
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgInferenceScoreCurrentRun
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgCutoffs
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgCutoffs
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgCutoffsCurrentRun
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgCutoffsCurrentRun
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgCutoffScore
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgCutoffScore
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getAvgCutoffScoreCurrentRun
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getAvgCutoffScoreCurrentRun
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printOrigProblem
 * Signature: (JJLjava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printOrigProblem
  (JNIEnv *, jobject, jlong, jlong, jstring, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printTransProblem
 * Signature: (JJLjava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printTransProblem
  (JNIEnv *, jobject, jlong, jlong, jstring, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printStatistics
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printStatistics
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printBranchingStatistics
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printBranchingStatistics
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printDisplayLine
 * Signature: (JJIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printDisplayLine
  (JNIEnv *, jobject, jlong, jlong, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getNImplications
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getNImplications
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    writeImplicationConflictGraph
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_writeImplicationConflictGraph
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTimeOfDay
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTimeOfDay
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createClock
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createClock
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createCPUClock
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createCPUClock
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createWallClock
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createWallClock
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeClock
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeClock
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    resetClock
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_resetClock
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    startClock
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_startClock
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    stopClock
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_stopClock
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    startSolvingTime
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_startSolvingTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    stopSolvingTime
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_stopSolvingTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getClockTime
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getClockTime
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setClockTime
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setClockTime
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getTotalTime
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getTotalTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getSolvingTime
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getSolvingTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getReadingTime
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getReadingTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPresolvingTime
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPresolvingTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getFirstLPTime
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getFirstLPTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    epsilon
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_epsilon
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    sumepsilon
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_sumepsilon
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    feastol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_feastol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    lpfeastol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_lpfeastol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    dualfeastol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_dualfeastol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    barrierconvtol
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_barrierconvtol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    cutoffbounddelta
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_cutoffbounddelta
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgFeastol
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgFeastol
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgLpfeastol
 * Signature: (JDZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgLpfeastol
  (JNIEnv *, jobject, jlong, jdouble, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgDualfeastol
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgDualfeastol
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    chgBarrierconvtol
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_chgBarrierconvtol
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    markLimitChanged
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_markLimitChanged
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    infinity
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_infinity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isEQ
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isEQ
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isLT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isLT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isLE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isLE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isGT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isGT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isGE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isGE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isInfinity
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isInfinity
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isZero
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isZero
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isPositive
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isPositive
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isNegative
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isNegative
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isIntegral
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isIntegral
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isScalingIntegral
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isScalingIntegral
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFracIntegral
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFracIntegral
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    floor
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_floor
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    ceil
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_ceil
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    round
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_round
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    frac
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_frac
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumEQ
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumEQ
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumLT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumLT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumLE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumLE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumGT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumGT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumGE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumGE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumZero
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumZero
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumPositive
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumPositive
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumNegative
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumNegative
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasEQ
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasEQ
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasLT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasLT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasLE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasLE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasGT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasGT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasGE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasGE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasZero
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasZero
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasPositive
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasPositive
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasNegative
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasNegative
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasIntegral
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasIntegral
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isFeasFracIntegral
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isFeasFracIntegral
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    feasFloor
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_feasFloor
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    feasCeil
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_feasCeil
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    feasRound
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_feasRound
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    feasFrac
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_feasFrac
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isLbBetter
 * Signature: (JDDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isLbBetter
  (JNIEnv *, jobject, jlong, jdouble, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isUbBetter
 * Signature: (JDDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isUbBetter
  (JNIEnv *, jobject, jlong, jdouble, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isRelEQ
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isRelEQ
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isRelLT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isRelLT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isRelLE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isRelLE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isRelGT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isRelGT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isRelGE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isRelGE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumRelEQ
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumRelEQ
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumRelLT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumRelLT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumRelLE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumRelLE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumRelGT
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumRelGT
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isSumRelGE
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isSumRelGE
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isUpdateUnreliable
 * Signature: (JDD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isUpdateUnreliable
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    isHugeValue
 * Signature: (JD)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_isHugeValue
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getHugeValue
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getHugeValue
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printReal
 * Signature: (JJDII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printReal
  (JNIEnv *, jobject, jlong, jlong, jdouble, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    blkmem
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_blkmem
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getMemUsed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getMemUsed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getMemExternEstim
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getMemExternEstim
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    calcMemGrowSize
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_calcMemGrowSize
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    allocBufferSize
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_allocBufferSize
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    duplicateBufferSize
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_duplicateBufferSize
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    reallocBufferSize
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_reallocBufferSize
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeBufferSize
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeBufferSize
  (JNIEnv *, jobject, jlong, jint, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    printMemoryDiagnostic
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_printMemoryDiagnostic
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createRealarray
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createRealarray
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeRealarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeRealarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    extendRealarray
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_extendRealarray
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearRealarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearRealarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRealarrayVal
 * Signature: (JJI)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRealarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setRealarrayVal
 * Signature: (JJID)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setRealarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    incRealarrayVal
 * Signature: (JJID)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_incRealarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRealarrayMinIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRealarrayMinIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getRealarrayMaxIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getRealarrayMaxIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createIntarray
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createIntarray
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeIntarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeIntarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    extendIntarray
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_extendIntarray
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearIntarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearIntarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getIntarrayVal
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getIntarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setIntarrayVal
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setIntarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    incIntarrayVal
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_incIntarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getIntarrayMinIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getIntarrayMinIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getIntarrayMaxIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getIntarrayMaxIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createBoolarray
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createBoolarray
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freeBoolarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freeBoolarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    extendBoolarray
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_extendBoolarray
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearBoolarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearBoolarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBoolarrayVal
 * Signature: (JJI)Z
 */
JNIEXPORT jboolean JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBoolarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setBoolarrayVal
 * Signature: (JJIZ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setBoolarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBoolarrayMinIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBoolarrayMinIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getBoolarrayMaxIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getBoolarrayMaxIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    createPtrarray
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_createPtrarray
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    freePtrarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_freePtrarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    extendPtrarray
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_extendPtrarray
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    clearPtrarray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_clearPtrarray
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPtrarrayVal
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPtrarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    setPtrarrayVal
 * Signature: (JJIJ)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_setPtrarrayVal
  (JNIEnv *, jobject, jlong, jlong, jint, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPtrarrayMinIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPtrarrayMinIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getPtrarrayMaxIdx
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getPtrarrayMaxIdx
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    includeDefaultPlugins
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_includeDefaultPlugins
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    getGitHash
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_zib_jscip_nativ_jni_JniScip_getGitHash
  (JNIEnv *, jobject);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    processShellArguments
 * Signature: (JI[Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_processShellArguments
  (JNIEnv *, jobject, jlong, jint, jobjectArray, jstring);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScip
 * Method:    runShell
 * Signature: (I[Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScip_runShell
  (JNIEnv *, jobject, jint, jobjectArray, jstring);

#ifdef __cplusplus
}
#endif
#endif

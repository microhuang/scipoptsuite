/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_zib_jscip_nativ_jni_JniScipConsPseudoboolean */

#ifndef _Included_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
#define _Included_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    includeConshdlrPseudoboolean
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_includeConshdlrPseudoboolean
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    createConsPseudoboolean
 * Signature: (JLjava/lang/String;[JI[D[[JI[I[DJDZJDDZZZZZZZZZZ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_createConsPseudoboolean
  (JNIEnv *, jobject, jlong, jstring, jlongArray, jint, jdoubleArray, jobjectArray, jint, jintArray, jdoubleArray, jlong, jdouble, jboolean, jlong, jdouble, jdouble, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    createConsBasicPseudoboolean
 * Signature: (JLjava/lang/String;[JI[D[[JI[I[DJDZJDD)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_createConsBasicPseudoboolean
  (JNIEnv *, jobject, jlong, jstring, jlongArray, jint, jdoubleArray, jobjectArray, jint, jintArray, jdoubleArray, jlong, jdouble, jboolean, jlong, jdouble, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    addCoefPseudoboolean
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_addCoefPseudoboolean
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    addTermPseudoboolean
 * Signature: (JJ[JID)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_addTermPseudoboolean
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jint, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getLhsPseudoboolean
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getLhsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getRhsPseudoboolean
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getRhsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getIndVarPseudoboolean
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getIndVarPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getLinearVarsPseudoboolean
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getLinearVarsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getLinearValsPseudoboolean
 * Signature: (JJ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getLinearValsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getNLinearVarsPseudoboolean
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getNLinearVarsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getTermVarsDataPseudoboolean
 * Signature: (JJ[[J[I)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getTermVarsDataPseudoboolean
  (JNIEnv *, jobject, jlong, jlong, jobjectArray, jintArray);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getTermValsPseudoboolean
 * Signature: (JJ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getTermValsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    getNTermValsPseudoboolean
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_getNTermValsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    chgLhsPseudoboolean
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_chgLhsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     de_zib_jscip_nativ_jni_JniScipConsPseudoboolean
 * Method:    chgRhsPseudoboolean
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_de_zib_jscip_nativ_jni_JniScipConsPseudoboolean_chgRhsPseudoboolean
  (JNIEnv *, jobject, jlong, jlong, jdouble);

#ifdef __cplusplus
}
#endif
#endif

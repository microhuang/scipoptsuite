# SCIP version 4.0.0.2

# should Benders' decomposition be used?
# [type: bool, advanced: FALSE, range: {TRUE,FALSE}, default: FALSE]
reading/storeader/usebenders = TRUE

# frequency for calling primal heuristic <rins-benders> (-1: never, 0: only at depth freqofs)
# [type: int, advanced: FALSE, range: [-1,65534], default: -1]
heuristics/rins-benders/freq = 10

# number of nodes added to the contingent of the total nodes
# [type: int, advanced: FALSE, range: [0,2147483647], default: 500]
heuristics/rins-benders/nodesofs = 10000

# maximum number of nodes to regard in the subproblem
# [type: int, advanced: TRUE, range: [0,2147483647], default: 5000]
heuristics/rins-benders/maxnodes = 20

# minimum number of nodes required to start the subproblem
# [type: int, advanced: TRUE, range: [0,2147483647], default: 50]
heuristics/rins-benders/minnodes = 0

# contingent of sub problem nodes in relation to the number of nodes of the original problem
# [type: real, advanced: FALSE, range: [0,1], default: 0.1]
heuristics/rins-benders/nodesquot = 1

# number of nodes without incumbent change that heuristic should wait
# [type: int, advanced: TRUE, range: [0,2147483647], default: 200]
heuristics/rins-benders/nwaitingnodes = 0

# minimum percentage of integer variables that have to be fixed
# [type: real, advanced: FALSE, range: [0,1], default: 0.3]
heuristics/rins-benders/minfixingrate = 0

# factor by which the limit on the number of LP depends on the node limit
# [type: real, advanced: TRUE, range: [1,1.79769313486232e+308], default: 2]
heuristics/rins-benders/lplimfac = 1

# Should Benders' cuts from LNS heuristics be transferred to the main SCIP instance?
# [type: bool, advanced: FALSE, range: {TRUE,FALSE}, default: TRUE]
benders/default/transfercuts = FALSE
